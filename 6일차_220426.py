# 참고) 리스트 내포(리스트 컴프리헨션)

## append 사용
num = []
for n in [1,2,3]:
    num.append(n*2)     # n의 값에 2를 곱한 후 num 리스트에 추가
print('append 사용 :', num)


## 리스트 내포 사용
num2 = [n * 2 for n in [1,2,3]]
print('리스트 내포 사용 :', num2)

print()


## append, if 사용
num3 = []
for n in [1,2,3,4,5]:
    if n % 2 == 1:  # 홀수만
        num3.append(n * 2)  # n에 2를 곱한 후 num3 리스트에 추가
print('append,if 사용 :',num3)


## 조건을 만족하는 데이터만 출력하는 리스트 내포

num4 = [n*2 for n in [1,2,3,4,5] if n%2 == 1]
#순서     3 /         1         /     2
print('조건 리스트 내포 사용 :', num4)

======================실행 결과======================
append 사용 : [2, 4, 6]
리스트 내포 사용 : [2, 4, 6]

append,if 사용 : [2, 6, 10]
조건 리스트 내포 사용 : [2, 6, 10]


# 기타 제어문

## break

### ex) 0부터 99까지 출력

i = 0
while 1:    # 무한 반복
    print(i,end = ' ')  # i를 출력, 엔터 기능을 스페이스로 대체
    i += 1
    if i == 100:    # i가 100일때 반복문 종료 (제어 흐름을 빠져나온다.)
        break

======================실행 결과======================
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 


# 136p)

while 1:
    answer = input('대한민국의 수도를 입력하세요: ')
    if answer == '서울'or answer == 'seoul' or answer == 'SEOUL':
        break   # 반복문 종료
    else :
        print('오답입니다')
print('정답입니다')

======================실행 결과======================
대한민국의 수도를 입력하세요: 대구
오답입니다
대한민국의 수도를 입력하세요: 부산
오답입니다
대한민국의 수도를 입력하세요: 울산
오답입니다
대한민국의 수도를 입력하세요: 서울
정답입니다


# 137p)

hobbies = []     # 빈 리스트
while 1:
    hob = input('취미를 입력해주세요(종료는 그냥 엔터) : ')
    if hob == '':   # 아무것도 입력하지 않으면 종료
        print('취미가 모두 입력되었습니다.')
        break
    else:
        hobbies.append(hob)     # hob 변수에 담긴 값을 리스트에 추가
print('입력된 취미는 {} 입니다.'.format(hobbies))

======================실행 결과======================
취미를 입력해주세요(종료는 그냥 엔터) : 독서
취미를 입력해주세요(종료는 그냥 엔터) : 게임
취미를 입력해주세요(종료는 그냥 엔터) : 음악 감상
취미를 입력해주세요(종료는 그냥 엔터) : 배구
취미를 입력해주세요(종료는 그냥 엔터) : 농구
취미를 입력해주세요(종료는 그냥 엔터) : 야구
취미를 입력해주세요(종료는 그냥 엔터) : 축구
취미를 입력해주세요(종료는 그냥 엔터) : 
취미가 모두 입력되었습니다.
입력된 취미는 ['독서', '게임', '음악 감상', '배구', '농구', '야구', '축구'] 입니다.


# continue  생략시키고 싶을때

## ex) 0~10 사이의 수 중 홀수만 출력

i=0
while i<10:
    i += 1
    if i & 2 == 0:  # 짝수라면
        continue    # while문 맨 처음 (조건문)으로 돌아간다.
    print(i)        # continue 문에 걸리면 이 부분은 실행 안됨.

======================실행 결과======================
2
3
6
7
10


# 139p)

fruits = ['사과','감귤']
count = 3   # 입력해야 할 남은 과일의 수
while 1:
    add = input('추가 할 과일을 입력해주세요. : ')
    if add in fruits:   # add변수에 있는 값이 fruits 리스트에 포함되었는가
        print('중복되었습니다, 다시 입력해주세요.')
        continue    # 포함되었다면 다시 반복문의 처음으로 돌아간다.
    else:
        fruits.append(add)  # 포함되지 않았다면 리스트에 추가한다.
        count -= 1      # 횟수를 1번 줄여준다.
        if count == 0:
            break
        else:
            print('과일이 보관되었습니다. 남은 저장용량은 {} 개 입니다.'.format(count))
            
print('보관된 과일은 {} 입니다.'.format(fruits))

======================실행 결과======================
추가 할 과일을 입력해주세요. : 사과
중복되었습니다, 다시 입력해주세요.
추가 할 과일을 입력해주세요. : 감귤
중복되었습니다, 다시 입력해주세요.
추가 할 과일을 입력해주세요. : 바나나
과일이 보관되었습니다. 남은 저장용량은 2 개 입니다.
추가 할 과일을 입력해주세요. : 멜론
과일이 보관되었습니다. 남은 저장용량은 1 개 입니다.
추가 할 과일을 입력해주세요. : 오렌지
보관된 과일은 ['사과', '감귤', '바나나', '멜론', '오렌지'] 입니다.


# 140p)
### My solution
count = 1
sum1 = 0
while count <= 5:
    num1 = int(input('{} 번째 정수를 입력해주세요. : '.format(count)))
    if num1 > 0:
        sum1 += num1
        count += 1 
    else:
        print('음수가 입력되었습니다, 다시 입력해주세요.')
        
print('입력받은 정수들의 합은 {} 입니다.'.format(sum1))

### Book solution

count = 0
total = 0
while count < 5:
    n = int(input('{}번째 정수를 입력하세요. : '.format(count +1)))
    if n <= 0:  # 0과 음수는 제외하기 위해 넣은 코드
        print('0이하의 정수는 처리할 수 없습니다.')
        continue    # 반복문의 처음으로 돌아간다.
    total += n      # n의 값을 합계에 누적시킨다.
    count += 1      # 횟수를 1 증가시킨다.

======================실행 결과======================
1 번째 정수를 입력해주세요. : 5
2 번째 정수를 입력해주세요. : 2
3 번째 정수를 입력해주세요. : -8
음수가 입력되었습니다, 다시 입력해주세요.
3 번째 정수를 입력해주세요. : 4
4 번째 정수를 입력해주세요. : 2
5 번째 정수를 입력해주세요. : 6
입력받은 정수들의 합은 19 입니다.


# ex) 반복문을 이용한 커피 자판기 프로그램

coffee = 5  # 커피의 개수
while 1:
    money = int(input('돈을 넣어주세요 : '))   # 사용자로부터 돈을 입력받는다.
    if money == 300:    # 커피값이 300원이라고 가정했을때
        print('커피 나왔습니다.')
        coffee -= 1
        print(f'남은 커피의 양은 {coffee}개 입니다.')
    elif money > 300:
        print(f'거스름돈 {money - 300}원을 주고 커피도 줍니다.')
        coffee -= 1
        print(f'남은 커피의 양은 {coffee}개 입니다.')
    else:
        print(f'금액이 부족합니다, {300 - money}원을 더 넣어주세요.')
        print(f'남은 커피의 양은 {coffee} 개 입니다.')
    if coffee == 0: # 커피의 개수가 0일때
        print('커피가 다 떨어졌습니다. 판매를 중지합니다.')
        break

======================실행 결과======================
돈을 넣어주세요 : 300
커피 나왔습니다.
남은 커피의 양은 4개 입니다.
돈을 넣어주세요 : 400
거스름돈 100원을 주고 커피도 줍니다.
남은 커피의 양은 3개 입니다.
돈을 넣어주세요 : 200
금액이 부족합니다, 100원을 더 넣어주세요.
남은 커피의 양은 3 개 입니다.
돈을 넣어주세요 : 500
거스름돈 200원을 주고 커피도 줍니다.
남은 커피의 양은 2개 입니다.
돈을 넣어주세요 : 600
거스름돈 300원을 주고 커피도 줍니다.
남은 커피의 양은 1개 입니다.
돈을 넣어주세요 : 350
거스름돈 50원을 주고 커피도 줍니다.
남은 커피의 양은 0개 입니다.
커피가 다 떨어졌습니다. 판매를 중지합니다.


# 내장 함수

## 문자열 내장 함수

# chr() : 유니코드를 문자로 변환
print(chr(48))  # 유니코드 48번에 해당하는 문자
print(chr(49))
print(chr(65))
print(chr(66))
print(chr(97))
print(chr(98))
print('==================================')

# ord() : 문자를 유니코드로 변환
print(ord('A'))
print(ord('B'))
print(ord('한'))
print('==================================')

# eval() : 문자열로 된 값을 계산
print(eval('100 + 200'))    # 문자열을 숫자 계산하듯이 해준다.
a = 10
print(eval('a*5'))
print(eval('min(1,2,3)'))  # min() : 최소값
print('==================================')

# format() : 형식을 갖춘 문자열
print(format(10000, ','))   # 천 단위 구분기호 넣기
print(format(10000, '_'))

======================실행 결과======================
0
1
A
B
a
b
==================================
65
66
54620
==================================
300
50
1
==================================
10,000
10_000

# 149p)

expr = input('계산식을 입력하세요. : ')
result = eval(expr)
print(expr + '=' + str(result))     # 문자열끼리의 더하기는 연결의 결과가 나온다.

======================실행 결과======================
계산식을 입력하세요. : 1+2+3+4
1+2+3+4=10


# 숫자 내장 함수

## abs() : 절대값

print(abs(10))
print(abs(-10))
print('================')

# divmod() : 몫과 나머지를 구해주는 함수

print(divmod(10,3))     # 결과는 튜플 형식
a,b = divmod(10,3)
print(a)    # 몫
print(b)    # 나머지
print('================')

# max() : 최대값

print(max(1,10))
li = [5, 3, 4, 2, 1]
print(max(li))
print('================')

# min() : 최소값

print(min(1,10))
li = [2,4,5,8,3]
print(min(li))
print('================')

# pow() : 거듭제곱 (**연산자)

print(pow(10,2))
print(pow(10,3))
print(pow(10,-3))
print(pow(10,-2))
print('================')

# round() : 반올림

print(round(1.5))   # 일의 자리까지
print(round(1.4))
print(round(1.336,2))   # 소수 둘째 자리까지
print(round(1.336,1))   # 소수 첫째 자리까지
print(round(2.675,2))   # 오차로 인해 2.67로 출력
print('================')

# sum() : 합계

list1 = [1,2,3,4,5]
print(sum(list1))

======================실행 결과======================
10
10
================
(3, 1)
3
1
================
10
5
================
1
2
================
100
1000
0.001
0.01
================
2
1
1.34
1.3
2.67
================
15


# 153p)

money = 10000
price = 3000    # 빵 1개의 가격
result = divmod(money,price)
print(result)   # 결과는 튜플 형식으로 나온다. (인덱싱 가능)
print(f'빵을 {result[0]}개 사고, {result[1]}원이 남았습니다.')

======================실행 결과======================
(3, 1000)
빵을 3개 사고, 1000원이 남았습니다.


















